#summary Describes the format of .rule files introduced in Golly 2.5.

<h1>Contents:</h1>

<wiki:toc max_depth="3" />

= Introduction =

Golly 2.5 introduces a new format for specifying rules.
A file in the new format has a .rule extension and contains all the information about the rule:
its name, documentation, table/tree data (used by the !RuleLoader algorithm), and any color/icon information.

Before describing the syntax in detail, let's look at an example.
Here is !WireWorld.rule (supplied in Golly's Rules folder):
{{{
@RULE WireWorld

A 4-state CA created by Brian Silverman.  WireWorld models the flow of
currents in wires and makes it relatively easy to build logic gates
and other digital circuits.

@TABLE

# Golly rule-table format.
# Each rule: C,N,NE,E,SE,S,SW,W,NW,C'
#
# Default for transitions not listed: no change
#
# Variables are bound within each transition. 
# For example, if a={1,2} then 4,a,0->a represents
# two transitions: 4,1,0->1 and 4,2,0->2
# (This is why we need to repeat the variables below.
#  In this case the method isn't really helping.)
#
n_states:4
neighborhood:Moore
symmetries:rotate8
var a={0,1,2,3}
var b={0,1,2,3}
var c={0,1,2,3}
var d={0,1,2,3}
var e={0,1,2,3}
var f={0,1,2,3}
var g={0,1,2,3}
var h={0,1,2,3}
var i={0,2,3}
var j={0,2,3}
var k={0,2,3}
var l={0,2,3}
var m={0,2,3}
var n={0,2,3}
1,a,b,c,d,e,f,g,h,2
2,a,b,c,d,e,f,g,h,3
3,i,j,k,l,m,n,a,1,1
3,i,j,k,l,m,1,n,1,1
3,i,j,k,l,1,m,n,1,1
3,i,j,k,1,l,m,n,1,1

@NAMES

# these state names are not yet used by Golly
0 empty
1 electron tail
2 electron head
3 copper wire

@COLORS

# same colors used at http://www.quinapalus.com/wi-index.html

0  48  48  48   dark gray
1   0 128 255   light blue
2 255 255 255   white
3 255 128   0   orange

@ICONS

# icon info is in XPM format (order is not important)

XPM
/* width height num_colors chars_per_pixel */
"31 31 5 1"
/* colors */
". c #000000"
"D c #404040"
"C c #808080"
"B c #C0C0C0"
"W c #FFFFFF"
/* pixels */
"..............................."
"..............................."
"..........DCBWWWWWBCD.........."
".........CWWWWWWWWWWWC........."
".......DWWWWWWWWWWWWWWWD......."
"......BWWWWWWWWWWWWWWWWWB......"
".....BWWWWWWWWWWWWWWWWWWWB....."
"....DWWWWWWWWWWWWWWWWWWWWWD...."
"....WWWWWWWWWWWWWWWWWWWWWWW...."
"...CWWWWWWWWWWWWWWWWWWWWWWWC..."
"..DWWWWWWWWWWWWWWWWWWWWWWWWWD.."
"..CWWWWWWWWWWWWWWWWWWWWWWWWWC.."
"..BWWWWWWWWWWWWWWWWWWWWWWWWWB.."
"..WWWWWWWWWWWWWWWWWWWWWWWWWWW.."
"..WWWWWWWWWWWWWWWWWWWWWWWWWWW.."
"..WWWWWWWWWWWWWWWWWWWWWWWWWWW.."
"..WWWWWWWWWWWWWWWWWWWWWWWWWWW.."
"..WWWWWWWWWWWWWWWWWWWWWWWWWWW.."
"..BWWWWWWWWWWWWWWWWWWWWWWWWWB.."
"..CWWWWWWWWWWWWWWWWWWWWWWWWWC.."
"..DWWWWWWWWWWWWWWWWWWWWWWWWWD.."
"...CWWWWWWWWWWWWWWWWWWWWWWWC..."
"....WWWWWWWWWWWWWWWWWWWWWWW...."
"....DWWWWWWWWWWWWWWWWWWWWWD...."
".....BWWWWWWWWWWWWWWWWWWWB....."
"......BWWWWWWWWWWWWWWWWWB......"
".......DWWWWWWWWWWWWWWWD......."
".........CWWWWWWWWWWWC........."
"..........DCBWWWWWBCD.........."
"..............................."
"..............................."

XPM
/* width height num_colors chars_per_pixel */
"15 15 4 1"
/* colors */
". c #000000"
"D c #404040"
"B c #C0C0C0"
"W c #FFFFFF"
/* pixels */
"..............."
"....DBWWWBD...."
"...BWWWWWWWB..."
"..BWWWWWWWWWB.."
".DWWWWWWWWWWWD."
".BWWWWWWWWWWWB."
".WWWWWWWWWWWWW."
".WWWWWWWWWWWWW."
".WWWWWWWWWWWWW."
".BWWWWWWWWWWWB."
".DWWWWWWWWWWWD."
"..BWWWWWWWWWB.."
"...BWWWWWWWB..."
"....DBWWWBD...."
"..............."

XPM
/* width height num_colors chars_per_pixel */
"7 7 4 1"
/* colors */
". c #000000"
"D c #404040"
"E c #E0E0E0"
"W c #FFFFFF"
/* pixels */
".DEWED."
"DWWWWWD"
"EWWWWWE"
"WWWWWWW"
"EWWWWWE"
"DWWWWWD"
".DEWED."
}}}

= The syntax of a .rule file =

The .rule format is textual and consists of one or more sections.
Each section starts with a line of the form @XXX... where X is an uppercase letter.
If Golly sees a section it doesn't recognize it silently ignores it (this will allow us to add new
sections in the future without breaking old versions of Golly). 
The currently recognized sections are described below.

== @RULE ==

This is the only mandatory section. The first line of a .rule must start with @RULE followed by a space
and then the rule name. For example:
{{{
@RULE WireWorld
}}}
The supplied rule name must match exactly the name of the .rule file. This helps Golly to avoid problems
that can occur on case-sensitive file systems. When naming a new rule it's best to stick to the following
conventions, especially if you'd like to share the .rule file with other Golly users: 

  * Please capitalize all rule names and create files like Foo.rule rather than foo.rule. This helps to emphasize that rule names are important, especially on case-sensitive file systems. If the rule "foo" is specified inside a .rle or .mc file then Golly won't be able to find Foo.rule on a case-sensitive system like Linux. 

  * To allow for possible future extensions in the way Golly handles rule names, it's best to use only letters and digits. Hyphens and underscores are also okay if you need some sort of separator. Note in particular that spaces and colons must not be used. 

After the @RULE line and before the next section (or end of file) you can include any amount of arbitrary text,
so this is the place to include a description of the rule or any other documentation.
If the .rule file has a @TREE section that was created by a Python transition function
then this is a good place to put the Python code.

== @TABLE ==

This section is optional. If present, it contains a transition table that can be loaded by the RuleLoader algorithm.
The contents of this section is identical to the contents of a .table file.
A detailed specification is available in TheFormat page.

== @TREE ==

!!!

== @COLORS ==

!!!

== @ICONS ==

!!!

=== Using XPM ===

!!!

=== Requesting built-in icons ===

!!!

=== Tools for creating icons ===

!!!

= How Golly finds .rule files =

!!!

= How to override supplied or built-in rules =

!!!

= The easy way to install a .rule file =

Golly provides a quick and easy way to install a new .rule file in the right place.
Copy the rule contents to the clipboard, then select Golly's Paste command.
When Golly sees that the first line of the clipboard starts with @RULE it will
save the text as rulename.rule in your rules folder (set in Preferences > Control)
and switch to that rule.

= Deprecated files (.table, .tree, .colors, .icons) =

Golly still supports the old rule-related files with extensions of .table, .tree, .colors and .icons,
but their use is discouraged.  To help speed up the transition to .rule files, Golly 2.5 has a
couple of handy features:

1. At the bottom of the Control menu is a new command called <b>Convert Old Rules</b>.
This will convert all .table/tree/colors/icons files into corresponding .rule files
(but existing .rule files will not be changed). It looks in the supplied Rules folder first,
then in your user-specific rules folder (set in Preferences > Control).
The results are displayed in the help window. If the conversion succeeds you'll be asked
if you want to delete the .table/tree/colors/icons files.

2. When Golly opens a .zip file containing .table/tree/colors/icons files it will automatically
convert them into .rule files, but only if the zip file has no .rule files.
Unlike the Convert Old Rules command, this conversion _will_ overwrite existing .rule files
(in case the zip file contents have changed).

Note that the downloadable zip files stored in the rule table repository have been modified
to include both .rule files and .table/tree/colors/icons files.  Golly 2.5+ will ignore the
deprecated files, while older versions will behave as before (the .rule files will be treated
as pattern files).