#summary An overview of possible future directions for the rule table format.

<p align="right">[http://code.google.com/p/ruletablerepository/source/list?path=/wiki/RoadMap.wiki Detailed page changes]</p>

Looking further ahead, here's a sketch of how the [TheFormat rule table format] might be extended to support future CA (see also: FutureWork). Items in bold are those currently supported in Golly.

These are just some ideas - please edit or comment to add your opinions. For a good survey on neighborhoods, see http://cell-auto.com/neighbourhood/

<h2>Two-dimensional neighbourhoods</h2>

|| neighborhood || transitions || symmetries || image ||
|| <b>vonNeumann</b> || {{{c,n,e,s,w : c'}}} || <b>none</b>, rotate (<b>rotate4</b>), rotate_reflect (<b>rotate4reflect</b>), reflect_horizontal (<b>reflect</b>), reflect_vertical, permutation || http://ruletablerepository.googlecode.com/files/vonNeumann.PNG ||
|| <b>Moore</b> || {{{c,n,ne,e,se,s,sw,w,nw : c'}}} || <b>none</b>, <b>rotate4</b>, <b>rotate8</b>, <b>rotate4reflect</b>, <b>rotate8reflect</b>, reflect_horizontal (<b>reflect</b>), reflect_vertical, permutation || http://ruletablerepository.googlecode.com/files/moore.PNG ||
|| vonNeumann_radius2 || {{{c,n,e,s,w,N,E,S,W : c'}}} || none, rotate4, rotate4reflect,  reflect_horizontal, reflect_vertical, inner-outer_permutation, total_permuation || http://ruletablerepository.googlecode.com/files/vonNeumannRadius2.PNG ||
|| diamond_radius2 || {{{c,n,ne,e,se,s,sw,w,nw,N,E,S,W : c'}}} || none, rotate4, rotate4reflect,  reflect_horizontal, reflect_vertical, inner-outer_permutation, total_permuation || http://ruletablerepository.googlecode.com/files/diamondRadius2.PNG ||
|| disc_radius2, or<br> circle_radius2 || {{{c,n,ne,e,se,s,sw,w,nw,N,NNE,ENE,E,ESE,SSE,S,SSW,WSW,W, : c'}}} || none, rotate4, rotate4reflect, reflect_horizontal, reflect_vertical, inner-outer_permutation, total_permuation || http://ruletablerepository.googlecode.com/files/intermediateRadius2.PNG ||
|| Moore_radius2 || {{{c,n,ne,e,se,s,sw,w,nw,N,NNE,NE,ENE,E,ESE,SE,SSE,S,SSW,SW,WSW,W,WNW,NW,NNW : c'}}} || none, rotate4, rotate8, rotate4reflect, rotate8reflect, reflect_horizontal, reflect_vertical, inner-outer_permutation, total_permuation || http://ruletablerepository.googlecode.com/files/mooreRadius2.PNG ||
|| <b>hexagonal</b>^*^ (see HexagonalNeighborhood) || {{{c,ne,e,se,sw,w,nw : c}}} || none, rotate, rotate_reflect, permutation || http://ruletablerepository.googlecode.com/files/hexagonal.PNG ||
|| <b>triangularVonNeumann</b>^*^ || {{{c,n1,n2,n3 : c'}}} || none, rotate, rotate_reflect, permutation || http://ruletablerepository.googlecode.com/files/triangularVonNeumann.PNG ||
|| <b>triangularMoore</b>^*^ || {{{c,n1..n12 : c'}}} || none, rotate, rotate_reflect, permutation || http://ruletablerepository.googlecode.com/files/triangularMoore.PNG ||
|| <b>Penrose tiling</b> || {{{c,n1..n4 : c'}}} || permutation || http://ruletablerepository.googlecode.com/files/Penrose.PNG ||

<h2>Two-dimensional partitioning schemes</h2>

|| neighborhood || transitions || symmetries || image ||
|| <b>Margolus</b>^*^ (see MargolusNeighborhood) || {{{a,b,c,d : a',b',c',d'}}} || <b>none</b>, rotate (<b>rotate4</b>), rotate_reflect (<b>rotate4reflect</b>), <b>reflect_horizontal</b>, <b>reflect_vertical</b>, permutation || http://ruletablerepository.googlecode.com/files/Margolus.GIF ||
|| square4_cyclic, square4_figure8h, square4_figure8v (==square4_reading_order) (see MargolusNeighborhood) || {{{a,b,c,d : a',b',c',d'}}} || none, rotate, rotate_reflect, reflect_horizontal, reflect_vertical, permutation || http://ruletablerepository.googlecode.com/files/Square4.GIF ||
|| square9_reading_order || {{{a,b,c,d,e,f,g,h,i : a',b',c',d',e',f',g',h',i'}}} || none, rotate, rotate_reflect, reflect_horizontal, reflect_vertical, permutation || http://ruletablerepository.googlecode.com/files/Square9.GIF ||

<h2>Three-dimensional neighbourhoods</h2>

|| neighborhood || transitions || symmetries || image ||
|| vonNeumann3D || {{{c,x+,x-,y+,y-,z+,z- : c'}}} || none, rotate, rotate_x, rotate_y, rotate_z, reflect_x, reflect_y, reflect_z, rotate24, rotate24reflect, permutation || http://ruletablerepository.googlecode.com/files/3dVonNeumann2.PNG ||
|| Moore3D || {{{c,n1..n26 : c'}}} || none, rotate4, rotate8, rotate4_x, rotate4_y, rotate4_z, rotate8_x, rotate8_y, rotate8_z, reflect_x, reflect_y, reflect_z, rotate24, rotate24reflect, permutation || http://ruletablerepository.googlecode.com/files/3dMoore.PNG ||
|| faceCentredCubic, or<br> dodecahedral, or<br> spherePacking || {{{c,n1..n12 : c'}}} || none, rotate12, rotate24, rotate24reflect, permutation || http://ruletablerepository.googlecode.com/files/FCC.PNG ||

<h2>One-dimensional neighbourhoods and partitioning schemes</h2>

|| neighborhood || transitions || symmetries || image ||
|| oneDimensional || {{{c,w,e : c'}}} || none, reflect, permutation? || http://ruletablerepository.googlecode.com/files/1dRadius1.PNG ||
|| oneDimensional_radius2 || {{{c,w2,w,e,e2 : c'}}} || none, reflect, permutation? || http://ruletablerepository.googlecode.com/files/1dRadius2.PNG ||
|| oneDimensional_partition2 ([http://cell-auto.com/neighbourhood/brickwall/index.html brick wall]) || {{{a,b : a',b'}}} || none, reflect || http://ruletablerepository.googlecode.com/files/BrickWall.GIF ||

<h2>Neighbourhoods in four or more dimensions</h2>

|| neighborhood || transitions || symmetries || image ||
|| [http://en.wikipedia.org/wiki/Demitesseractic_honeycomb F4_lattice] || {{{c,n1..n16 : c'}}} || none, rotate192, rotate192reflect, permutation || http://ruletablerepository.googlecode.com/files/F4lattice.PNG ||
|| [http://en.wikipedia.org/wiki/Icositetrachoric_honeycomb D4_lattice] || {{{c,n1..n24 : c'}}} || none, rotate192, rotate192reflect, permutation || http://ruletablerepository.googlecode.com/files/D4lattice.PNG ||
|| [http://en.wikipedia.org/wiki/E8_lattice E8_lattice] || {{{c,n1..n240 : c'}}} || none, rotate348364800, rotate348364800reflect, permutation || http://ruletablerepository.googlecode.com/files/E8.PNG ||
|| [http://en.wikipedia.org/wiki/Leech_lattice Leech_lattice] || {{{c,n1..n196560 : c'}}} || none, rotate8315553613086720000, rotate8315553613086720000reflect, permutation || http://ruletablerepository.googlecode.com/files/leechLattice.PNG ||

^*^Supported in Golly through emulation.

Brian Prentice and others have done some work on CA that run on arbitrary tilings: http://linuxenvy.com/bprentice/TiledCA/TiledCA.html

There are some sets of cellular automata that are best supported independently, rather than incorporating them into rule tables:


|| Rule set || Parameters ||
|| <b>Life-like</b> || b0..b8,s0..s8 ||
|| <b>Generations</b> || b0..b8,s0..s8,n ||
|| Larger than Life || range,bMin,bMax,sMin,sMax ||


The final rule, Larger than Life, relies on large neighbourhoods; these are not currently supported by Golly.